group 'ru.osslabs.platform'
version '1.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply from: 'provided.gradle'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenLocal()
}

//compileGroovy {
//    dependsOn = []
//}
//
//classes {
//    dependsOn = [compileGroovy]
//}
//
//compileTestGroovy {
//    dependsOn = [classes]
//}
//
//testClasses {
//    dependsOn = [compileTestGroovy]
//}

//sourceSets {
//    main {
//        java {srcDirs = ["src/main/java"] }
//        groovy { srcDirs = ["src/main/groovy"] }  // compile   everything in src/ with groovy
//    }
//}

dependencies {
    compile "org.projectlombok:lombok:1.16.8"
    compile "io.javaslang:javaslang:2.0.1"
    testCompile 'org.codehaus.groovy:groovy-all:2.4.6'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
}

//task delombok(type: JavaExec) {
//    classpath = configurations.compile
//    main = "lombok.launch.Main"
//    args = [ "delombok", "--quiet", "src/main/java", "--target", "delombok" ]
//}

task sourceJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allJava
}

task testJar(type: Jar) {
    from sourceSets.test.output
}

publishing {
    repositories {
//        def mavenRepositoryCredentials = {
//            username nexusUsername
//            password nexusPassword
//        }

        maven {
            name 'mavenRepositorySnapshots'
            credentials {
                username nexusUsername
                password nexusPassword
            }
            url 'http://maven-repository.osslabs.ru/content/repositories/snapshots/'
        }
        maven {
            name 'mavenRepositoryReleases'
            credentials {
                username nexusUsername
                password nexusPassword
            }
            url 'http://maven-repository.osslabs.ru/content/repositories/releases/'
        }
    }

    publications {
        mainJava(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier = 'sources'
            }
            artifact testJar {
                classifier = 'tests'
            }
        }
    }
}